{"version":3,"sources":["components/DataForm.js","App.js","index.js"],"names":["DataForm","_ref","onDataSave","inputData","setInputData","useState","savedData","setSavedData","error","setError","API_URL","process","React","createElement","type","value","onChange","e","target","placeholder","style","marginLeft","onClick","async","response","fetch","method","headers","Content-Type","body","JSON","stringify","data","ok","Error","result","json","console","color","map","item","index","key","App","setData","newData","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2HA4IeA,MApEEC,IAAoB,IAAnBC,WAAEA,GAAYD,EAC9B,MAAOE,EAAWC,GAAgBC,mBAAS,KACpCC,EAAWC,GAAgBF,mBAAS,KACpCG,EAAOC,GAAYJ,mBAAS,MAE7BK,EAAUC,sFAwChB,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEC,KAAK,OACLC,MAAOZ,EACPa,SA3CqBC,IACzBb,EAAaa,EAAEC,OAAOH,QA2ClBI,YAAY,eAEdP,IAAAC,cAAA,UAAQO,MAAO,CAAEC,WAAY,QAAUC,QA1CxBC,UACjB,GAAKpB,EACL,IACE,MAAMqB,QAAiBC,MAAMf,EAAS,CACpCgB,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,KAAM7B,MAE/B,IAAKqB,EAASS,GAAI,MAAM,IAAIC,MAAM,uBAClC,MAAMC,QAAeX,EAASY,OAC9BhC,EAAa,IACbF,EAAWiC,EAAOH,MAClBvB,EAAS,MACT,MAAOD,GACP6B,QAAQ7B,MAAM,qBAAsBA,GACpCC,EAAS,0BAyBmD,QAC5DG,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,UAAQS,QAxBIC,UAChB,IACE,MAAMC,QAAiBC,MAAMf,GAC7B,IAAKc,EAASS,GAAI,MAAM,IAAIC,MAAM,wBAClC,MAAMC,QAAeX,EAASY,OAC9B7B,EAAa4B,GACb1B,EAAS,MACT,MAAOD,GACP6B,QAAQ7B,MAAM,uBAAwBA,GACtCC,EAAS,2BAeqB,SAE7BD,GAASI,IAAAC,cAAA,KAAGO,MAAO,CAAEkB,MAAO,QAAU9B,GACvCI,IAAAC,cAAA,UACGP,EAAUiC,IAAI,CAACC,EAAMC,IACpB7B,IAAAC,cAAA,MAAI6B,IAAKD,GAAQD,EAAKR,UC9GjBW,MApBf,WACE,MAAOX,EAAMY,GAAWvC,mBAAS,IAMjC,OACEO,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAACb,EAAQ,CAACE,WAPU2C,IACtBD,EAAQ,IAAIZ,EAAMa,gBCFTC,EAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtC,IAAAC,cAACD,IAAMuC,WAAU,KACfvC,IAAAC,cAAC8B,EAAG","file":"static/js/main.afee11be.chunk.js","sourcesContent":["// // filepath: /c:/Users/shaik/OneDrive/Desktop/testingSimplePage(NoorSir)/my-react-app/frontend/src/components/DataForm.js\n// import React, { useState } from 'react';\n\n// const DataForm = ({ onDataSave }) => {\n//     const [inputData, setInputData] = useState('');\n//     const [savedData, setSavedData] = useState([]);\n\n//     const handleInputChange = (e) => {\n//         setInputData(e.target.value);\n//     };\n\n//     const handleSave = async () => {\n//         if (inputData) {\n//             try {\n//                 const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n//                     method: 'POST',\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                     },\n//                     body: JSON.stringify({ data: inputData }),\n//                 });\n//                 const result = await response.json();\n//                 console.log('Data saved:', result);\n//                 setInputData('');\n//                 onDataSave(result.data);\n//             } catch (error) {\n//                 console.error('Error saving data:', error);\n//             }\n//         }\n//     };\n\n//     const fetchData = async () => {\n//         try {\n//             const response = await fetch(`${process.env.REACT_APP_API_URL}`);\n//             const result = await response.json();\n//             console.log('Data fetched:', result);\n//             setSavedData(result);\n//         } catch (error) {\n//             console.error('Error fetching data:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 value={inputData}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter data\"\n//             />\n//             <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n            \n//             <div>\n//                 <h2>Saved Data</h2>\n//                 <button onClick={fetchData}>View</button>\n//             </div>\n//             <ul>\n//                 {savedData.map((item, index) => (\n//                     <li key={index}>{item.data}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default DataForm;\n\n\n\n\nimport React, { useState } from 'react';\n\nconst DataForm = ({ onDataSave }) => {\n  const [inputData, setInputData] = useState('');\n  const [savedData, setSavedData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const API_URL = process.env.REACT_APP_API_URL\n\n  const handleInputChange = (e) => {\n    setInputData(e.target.value);\n  };\n\n  const handleSave = async () => {\n    if (!inputData) return;\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ data: inputData }),\n      });\n      if (!response.ok) throw new Error('Failed to save data');\n      const result = await response.json();\n      setInputData('');\n      onDataSave(result.data);\n      setError(null);\n    } catch (error) {\n      console.error('Error saving data:', error);\n      setError('Failed to save data');\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (!response.ok) throw new Error('Failed to fetch data');\n      const result = await response.json();\n      setSavedData(result);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch data');\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputData}\n        onChange={handleInputChange}\n        placeholder=\"Enter data\"\n      />\n      <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n      <div>\n        <h2>Saved Data</h2>\n        <button onClick={fetchData}>View</button>\n      </div>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <ul>\n        {savedData.map((item, index) => (\n          <li key={index}>{item.data}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DataForm;","import React, { useState } from 'react';\nimport DataForm from './components/DataForm';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const handleDataSave = (newData) => {\n    setData([...data, newData]);\n  };\n\n  return (\n    <div>\n      <h1>Data Management App</h1>\n      <DataForm onDataSave={handleDataSave} />\n      {/* <ul>\n        {data.map((item, index) => (\n          <li key={index}>{item.data}</li>\n        ))}\n      </ul> */}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}