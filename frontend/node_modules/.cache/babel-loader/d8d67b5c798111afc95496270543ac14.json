{"ast":null,"code":"var _jsxFileName = \"D:\\\\Haroon\\\\Career\\\\Clients\\\\truleeinnovate\\\\TestDemoWithInput\\\\frontend\\\\src\\\\components\\\\DataForm.js\";\n// // filepath: /c:/Users/shaik/OneDrive/Desktop/testingSimplePage(NoorSir)/my-react-app/frontend/src/components/DataForm.js\n// import React, { useState } from 'react';\n\n// const DataForm = ({ onDataSave }) => {\n//     const [inputData, setInputData] = useState('');\n//     const [savedData, setSavedData] = useState([]);\n\n//     const handleInputChange = (e) => {\n//         setInputData(e.target.value);\n//     };\n\n//     const handleSave = async () => {\n//         if (inputData) {\n//             try {\n//                 const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n//                     method: 'POST',\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                     },\n//                     body: JSON.stringify({ data: inputData }),\n//                 });\n//                 const result = await response.json();\n//                 console.log('Data saved:', result);\n//                 setInputData('');\n//                 onDataSave(result.data);\n//             } catch (error) {\n//                 console.error('Error saving data:', error);\n//             }\n//         }\n//     };\n\n//     const fetchData = async () => {\n//         try {\n//             const response = await fetch(`${process.env.REACT_APP_API_URL}`);\n//             const result = await response.json();\n//             console.log('Data fetched:', result);\n//             setSavedData(result);\n//         } catch (error) {\n//             console.error('Error fetching data:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 value={inputData}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter data\"\n//             />\n//             <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n\n//             <div>\n//                 <h2>Saved Data</h2>\n//                 <button onClick={fetchData}>View</button>\n//             </div>\n//             <ul>\n//                 {savedData.map((item, index) => (\n//                     <li key={index}>{item.data}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default DataForm;\n\nimport React, { useState } from 'react';\nconst DataForm = ({\n  onDataSave\n}) => {\n  const [inputData, setInputData] = useState('');\n  const [savedData, setSavedData] = useState([]);\n  const [error, setError] = useState(null);\n  const API_URL = process.env.REACT_APP_API_URL;\n  const handleInputChange = e => {\n    setInputData(e.target.value);\n  };\n  const handleSave = async () => {\n    if (!inputData) return;\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: inputData\n        })\n      });\n      if (!response.ok) throw new Error('Failed to save data');\n      const result = await response.json();\n      setInputData('');\n      onDataSave(result.data);\n      setError(null);\n    } catch (error) {\n      console.error('Error saving data:', error);\n      setError('Failed to save data');\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (!response.ok) throw new Error('Failed to fetch data');\n      const result = await response.json();\n      setSavedData(result);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch data');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputData,\n    onChange: handleInputChange,\n    placeholder: \"Enter data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginLeft: '10px'\n    },\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Saved Data\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"View\")), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, savedData.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, item.data))));\n};\nexport default DataForm;","map":{"version":3,"names":["React","useState","DataForm","onDataSave","inputData","setInputData","savedData","setSavedData","error","setError","API_URL","process","env","REACT_APP_API_URL","handleInputChange","e","target","value","handleSave","response","fetch","method","headers","body","JSON","stringify","data","ok","Error","result","json","console","fetchData","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","marginLeft","onClick","color","map","item","index","key"],"sources":["D:/Haroon/Career/Clients/truleeinnovate/TestDemoWithInput/frontend/src/components/DataForm.js"],"sourcesContent":["// // filepath: /c:/Users/shaik/OneDrive/Desktop/testingSimplePage(NoorSir)/my-react-app/frontend/src/components/DataForm.js\n// import React, { useState } from 'react';\n\n// const DataForm = ({ onDataSave }) => {\n//     const [inputData, setInputData] = useState('');\n//     const [savedData, setSavedData] = useState([]);\n\n//     const handleInputChange = (e) => {\n//         setInputData(e.target.value);\n//     };\n\n//     const handleSave = async () => {\n//         if (inputData) {\n//             try {\n//                 const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n//                     method: 'POST',\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                     },\n//                     body: JSON.stringify({ data: inputData }),\n//                 });\n//                 const result = await response.json();\n//                 console.log('Data saved:', result);\n//                 setInputData('');\n//                 onDataSave(result.data);\n//             } catch (error) {\n//                 console.error('Error saving data:', error);\n//             }\n//         }\n//     };\n\n//     const fetchData = async () => {\n//         try {\n//             const response = await fetch(`${process.env.REACT_APP_API_URL}`);\n//             const result = await response.json();\n//             console.log('Data fetched:', result);\n//             setSavedData(result);\n//         } catch (error) {\n//             console.error('Error fetching data:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 value={inputData}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter data\"\n//             />\n//             <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n            \n//             <div>\n//                 <h2>Saved Data</h2>\n//                 <button onClick={fetchData}>View</button>\n//             </div>\n//             <ul>\n//                 {savedData.map((item, index) => (\n//                     <li key={index}>{item.data}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default DataForm;\n\n\n\nimport React, { useState } from 'react';\n\nconst DataForm = ({ onDataSave }) => {\n  const [inputData, setInputData] = useState('');\n  const [savedData, setSavedData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const API_URL = process.env.REACT_APP_API_URL\n\n  const handleInputChange = (e) => {\n    setInputData(e.target.value);\n  };\n\n  const handleSave = async () => {\n    if (!inputData) return;\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ data: inputData }),\n      });\n      if (!response.ok) throw new Error('Failed to save data');\n      const result = await response.json();\n      setInputData('');\n      onDataSave(result.data);\n      setError(null);\n    } catch (error) {\n      console.error('Error saving data:', error);\n      setError('Failed to save data');\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (!response.ok) throw new Error('Failed to fetch data');\n      const result = await response.json();\n      setSavedData(result);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch data');\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputData}\n        onChange={handleInputChange}\n        placeholder=\"Enter data\"\n      />\n      <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n      <div>\n        <h2>Saved Data</h2>\n        <button onClick={fetchData}>View</button>\n      </div>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <ul>\n        {savedData.map((item, index) => (\n          <li key={index}>{item.data}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DataForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}