{"ast":null,"code":"// // filepath: /c:/Users/shaik/OneDrive/Desktop/testingSimplePage(NoorSir)/my-react-app/frontend/src/components/DataForm.js\n// import React, { useState } from 'react';\n// const DataForm = ({ onDataSave }) => {\n//     const [inputData, setInputData] = useState('');\n//     const [savedData, setSavedData] = useState([]);\n//     const handleInputChange = (e) => {\n//         setInputData(e.target.value);\n//     };\n//     const handleSave = async () => {\n//         if (inputData) {\n//             try {\n//                 const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n//                     method: 'POST',\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                     },\n//                     body: JSON.stringify({ data: inputData }),\n//                 });\n//                 const result = await response.json();\n//                 console.log('Data saved:', result);\n//                 setInputData('');\n//                 onDataSave(result.data);\n//             } catch (error) {\n//                 console.error('Error saving data:', error);\n//             }\n//         }\n//     };\n//     const fetchData = async () => {\n//         try {\n//             const response = await fetch(`${process.env.REACT_APP_API_URL}`);\n//             const result = await response.json();\n//             console.log('Data fetched:', result);\n//             setSavedData(result);\n//         } catch (error) {\n//             console.error('Error fetching data:', error);\n//         }\n//     };\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 value={inputData}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter data\"\n//             />\n//             <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n//             <div>\n//                 <h2>Saved Data</h2>\n//                 <button onClick={fetchData}>View</button>\n//             </div>\n//             <ul>\n//                 {savedData.map((item, index) => (\n//                     <li key={index}>{item.data}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n// export default DataForm;\nimport React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DataForm=_ref=>{let{onDataSave}=_ref;const[inputData,setInputData]=useState('');const[savedData,setSavedData]=useState([]);const[error,setError]=useState(null);const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api/data';const handleInputChange=e=>{setInputData(e.target.value);};const handleSave=async()=>{if(!inputData)return;try{const response=await fetch(API_URL,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({data:inputData})});if(!response.ok)throw new Error('Failed to save data');const result=await response.json();setInputData('');onDataSave(result.data);setError(null);}catch(error){console.error('Error saving data:',error);setError('Failed to save data');}};const fetchData=async()=>{try{const response=await fetch(API_URL);if(!response.ok)throw new Error('Failed to fetch data');const result=await response.json();setSavedData(result);setError(null);}catch(error){console.error('Error fetching data:',error);setError('Failed to fetch data');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputData,onChange:handleInputChange,placeholder:\"Enter data\"}),/*#__PURE__*/_jsx(\"button\",{style:{marginLeft:'10px'},onClick:handleSave,children:\"Save\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Saved Data\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchData,children:\"View\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"ul\",{children:savedData.map((item,index)=>/*#__PURE__*/_jsx(\"li\",{children:item.data},index))})]});};export default DataForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","DataForm","_ref","onDataSave","inputData","setInputData","savedData","setSavedData","error","setError","API_URL","process","env","REACT_APP_API_URL","handleInputChange","e","target","value","handleSave","response","fetch","method","headers","body","JSON","stringify","data","ok","Error","result","json","console","fetchData","children","type","onChange","placeholder","style","marginLeft","onClick","color","map","item","index"],"sources":["D:/Haroon/Career/Clients/truleeinnovate/TestDemoWithInput/frontend/src/components/DataForm.js"],"sourcesContent":["// // filepath: /c:/Users/shaik/OneDrive/Desktop/testingSimplePage(NoorSir)/my-react-app/frontend/src/components/DataForm.js\n// import React, { useState } from 'react';\n\n// const DataForm = ({ onDataSave }) => {\n//     const [inputData, setInputData] = useState('');\n//     const [savedData, setSavedData] = useState([]);\n\n//     const handleInputChange = (e) => {\n//         setInputData(e.target.value);\n//     };\n\n//     const handleSave = async () => {\n//         if (inputData) {\n//             try {\n//                 const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n//                     method: 'POST',\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                     },\n//                     body: JSON.stringify({ data: inputData }),\n//                 });\n//                 const result = await response.json();\n//                 console.log('Data saved:', result);\n//                 setInputData('');\n//                 onDataSave(result.data);\n//             } catch (error) {\n//                 console.error('Error saving data:', error);\n//             }\n//         }\n//     };\n\n//     const fetchData = async () => {\n//         try {\n//             const response = await fetch(`${process.env.REACT_APP_API_URL}`);\n//             const result = await response.json();\n//             console.log('Data fetched:', result);\n//             setSavedData(result);\n//         } catch (error) {\n//             console.error('Error fetching data:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 value={inputData}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter data\"\n//             />\n//             <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n            \n//             <div>\n//                 <h2>Saved Data</h2>\n//                 <button onClick={fetchData}>View</button>\n//             </div>\n//             <ul>\n//                 {savedData.map((item, index) => (\n//                     <li key={index}>{item.data}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default DataForm;\n\n\n\nimport React, { useState } from 'react';\n\nconst DataForm = ({ onDataSave }) => {\n  const [inputData, setInputData] = useState('');\n  const [savedData, setSavedData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api/data';\n\n  const handleInputChange = (e) => {\n    setInputData(e.target.value);\n  };\n\n  const handleSave = async () => {\n    if (!inputData) return;\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ data: inputData }),\n      });\n      if (!response.ok) throw new Error('Failed to save data');\n      const result = await response.json();\n      setInputData('');\n      onDataSave(result.data);\n      setError(null);\n    } catch (error) {\n      console.error('Error saving data:', error);\n      setError('Failed to save data');\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (!response.ok) throw new Error('Failed to fetch data');\n      const result = await response.json();\n      setSavedData(result);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch data');\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputData}\n        onChange={handleInputChange}\n        placeholder=\"Enter data\"\n      />\n      <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n      <div>\n        <h2>Saved Data</h2>\n        <button onClick={fetchData}>View</button>\n      </div>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <ul>\n        {savedData.map((item, index) => (\n          <li key={index}>{item.data}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DataForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}