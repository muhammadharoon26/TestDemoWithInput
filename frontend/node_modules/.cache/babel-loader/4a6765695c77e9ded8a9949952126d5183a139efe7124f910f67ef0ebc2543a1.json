{"ast":null,"code":"var _jsxFileName = \"D:\\\\Haroon\\\\Career\\\\Clients\\\\truleeinnovate\\\\TestDemoWithInput\\\\frontend\\\\src\\\\components\\\\DataForm.js\",\n  _s = $RefreshSig$();\n// // filepath: /c:/Users/shaik/OneDrive/Desktop/testingSimplePage(NoorSir)/my-react-app/frontend/src/components/DataForm.js\n// import React, { useState } from 'react';\n\n// const DataForm = ({ onDataSave }) => {\n//     const [inputData, setInputData] = useState('');\n//     const [savedData, setSavedData] = useState([]);\n\n//     const handleInputChange = (e) => {\n//         setInputData(e.target.value);\n//     };\n\n//     const handleSave = async () => {\n//         if (inputData) {\n//             try {\n//                 const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n//                     method: 'POST',\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                     },\n//                     body: JSON.stringify({ data: inputData }),\n//                 });\n//                 const result = await response.json();\n//                 console.log('Data saved:', result);\n//                 setInputData('');\n//                 onDataSave(result.data);\n//             } catch (error) {\n//                 console.error('Error saving data:', error);\n//             }\n//         }\n//     };\n\n//     const fetchData = async () => {\n//         try {\n//             const response = await fetch(`${process.env.REACT_APP_API_URL}`);\n//             const result = await response.json();\n//             console.log('Data fetched:', result);\n//             setSavedData(result);\n//         } catch (error) {\n//             console.error('Error fetching data:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 value={inputData}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter data\"\n//             />\n//             <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n\n//             <div>\n//                 <h2>Saved Data</h2>\n//                 <button onClick={fetchData}>View</button>\n//             </div>\n//             <ul>\n//                 {savedData.map((item, index) => (\n//                     <li key={index}>{item.data}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default DataForm;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataForm = ({\n  onDataSave\n}) => {\n  _s();\n  const [inputData, setInputData] = useState('');\n  const [savedData, setSavedData] = useState([]);\n  const [error, setError] = useState(null);\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api/data';\n  const handleInputChange = e => {\n    setInputData(e.target.value);\n  };\n  const handleSave = async () => {\n    if (!inputData) return;\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: inputData\n        })\n      });\n      if (!response.ok) throw new Error('Failed to save data');\n      const result = await response.json();\n      setInputData('');\n      onDataSave(result.data);\n      setError(null);\n    } catch (error) {\n      console.error('Error saving data:', error);\n      setError('Failed to save data');\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (!response.ok) throw new Error('Failed to fetch data');\n      const result = await response.json();\n      setSavedData(result);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputData,\n      onChange: handleInputChange,\n      placeholder: \"Enter data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: '10px'\n      },\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Saved Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: savedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.data\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(DataForm, \"ILAZ8PLArwCaSvPe0Fnsfpe0FJY=\");\n_c = DataForm;\nexport default DataForm;\nvar _c;\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DataForm","onDataSave","_s","inputData","setInputData","savedData","setSavedData","error","setError","API_URL","process","env","REACT_APP_API_URL","handleInputChange","e","target","value","handleSave","response","fetch","method","headers","body","JSON","stringify","data","ok","Error","result","json","console","fetchData","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","onClick","color","map","item","index","_c","$RefreshReg$"],"sources":["D:/Haroon/Career/Clients/truleeinnovate/TestDemoWithInput/frontend/src/components/DataForm.js"],"sourcesContent":["// // filepath: /c:/Users/shaik/OneDrive/Desktop/testingSimplePage(NoorSir)/my-react-app/frontend/src/components/DataForm.js\n// import React, { useState } from 'react';\n\n// const DataForm = ({ onDataSave }) => {\n//     const [inputData, setInputData] = useState('');\n//     const [savedData, setSavedData] = useState([]);\n\n//     const handleInputChange = (e) => {\n//         setInputData(e.target.value);\n//     };\n\n//     const handleSave = async () => {\n//         if (inputData) {\n//             try {\n//                 const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n//                     method: 'POST',\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                     },\n//                     body: JSON.stringify({ data: inputData }),\n//                 });\n//                 const result = await response.json();\n//                 console.log('Data saved:', result);\n//                 setInputData('');\n//                 onDataSave(result.data);\n//             } catch (error) {\n//                 console.error('Error saving data:', error);\n//             }\n//         }\n//     };\n\n//     const fetchData = async () => {\n//         try {\n//             const response = await fetch(`${process.env.REACT_APP_API_URL}`);\n//             const result = await response.json();\n//             console.log('Data fetched:', result);\n//             setSavedData(result);\n//         } catch (error) {\n//             console.error('Error fetching data:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 value={inputData}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter data\"\n//             />\n//             <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n            \n//             <div>\n//                 <h2>Saved Data</h2>\n//                 <button onClick={fetchData}>View</button>\n//             </div>\n//             <ul>\n//                 {savedData.map((item, index) => (\n//                     <li key={index}>{item.data}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default DataForm;\n\n\n\nimport React, { useState } from 'react';\n\nconst DataForm = ({ onDataSave }) => {\n  const [inputData, setInputData] = useState('');\n  const [savedData, setSavedData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api/data';\n\n  const handleInputChange = (e) => {\n    setInputData(e.target.value);\n  };\n\n  const handleSave = async () => {\n    if (!inputData) return;\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ data: inputData }),\n      });\n      if (!response.ok) throw new Error('Failed to save data');\n      const result = await response.json();\n      setInputData('');\n      onDataSave(result.data);\n      setError(null);\n    } catch (error) {\n      console.error('Error saving data:', error);\n      setError('Failed to save data');\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (!response.ok) throw new Error('Failed to fetch data');\n      const result = await response.json();\n      setSavedData(result);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch data');\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputData}\n        onChange={handleInputChange}\n        placeholder=\"Enter data\"\n      />\n      <button style={{ marginLeft: '10px' }} onClick={handleSave}>Save</button>\n      <div>\n        <h2>Saved Data</h2>\n        <button onClick={fetchData}>View</button>\n      </div>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <ul>\n        {savedData.map((item, index) => (\n          <li key={index}>{item.data}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DataForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}